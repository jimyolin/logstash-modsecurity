filter {
  if [type] == "mod_security" {

    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # Convert section H into tags and severity. Requires 2080 tags to allow more than 1 entry. Or use the one found with this folder
    # delete the 'Message' sub-key
    # built in the previous section under key 'messages', then
    # delete auditLogTrailerMessages
    #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    if [rawSectionH] =~ /.+/ {

      # trim leading/trailing hack  @see https://logstash.jira.com/browse/LOGSTASH-1369
      ruby {
        code => "
            require 'set'

            severityTo_i = {
              'EMERGENCY' => 0,
              'ALERT'     => 1,
              'CRITICAL'  => 2,
              'ERROR'     => 3,
              'WARNING'   => 4,
              'NOTICE'    => 5,
              'DEBUG'     => 6,
              'INFO'      => 7
            }

            tagSet = Set.new []
            idSet = Set.new []
            highestSeverity = 'INFO'
            highestSeverityEnum = 7

            # Loop and extract
            auditLogTrailerMessages = event.get('auditLogTrailerMessages')
            auditLogTrailerMessages.each {|modsec|
              tagSet.merge(modsec['tag'])
              idSet.add(modsec['id'])

              # check severities here
              severityCur = modsec['severity']
              severityEnum = severityTo_i.fetch(severityCur, 7)
              if severityEnum < highestSeverityEnum
                highestSeverity = severityCur
                highestSeverityEnum = severityEnum
              end
            }

            event.set('tags',tagSet.to_a().sort)
            event.set('modsec_ids', idSet.to_a().sort)
            event.set('highest severity', highestSeverity)
            event.remove('auditLogTrailerMessages')
          "
      }
    }
  }
}
